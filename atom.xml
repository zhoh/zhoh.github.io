<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zhoh的博客</title>
  <subtitle>一个爱摸耳朵的IT胖子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhoh.github.io/"/>
  <updated>2016-06-28T17:06:56.000Z</updated>
  <id>http://zhoh.github.io/</id>
  
  <author>
    <name>ZhouHao</name>
    <email>hzdezh@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS UITextView 限制最大可输入字数</title>
    <link href="http://zhoh.github.io/2016/06/28/textView-maxLength/"/>
    <id>http://zhoh.github.io/2016/06/28/textView-maxLength/</id>
    <published>2016-06-28T11:35:58.000Z</published>
    <updated>2016-06-28T17:06:56.000Z</updated>
    
    <content type="html">&lt;p&gt;一个简单的小需求：文本框最多可以输入N个字，超过后不可输入，实际在过程中遇到了一些小问题，这里记录一下，想直接看结论的可以直接点目录的“最终版”；&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;一开始的实现-第一版&quot;&gt;&lt;a href=&quot;#一开始的实现-第一版&quot; class=&quot;headerlink&quot; title=&quot;一开始的实现-第一版&quot;&gt;&lt;/a&gt;一开始的实现-第一版&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // delete一个或者选中的多个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (0 == text.length &amp;amp;&amp;amp; range.length &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 将要生成的文本长度 = 目前文本框文字长度 + 将要输入的文字长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (textView.text.length + text.length &amp;gt; self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当用户在UITextView文本框输入或者删除字符时会调用这个方法，即当文本框中&lt;code&gt;range.location&lt;/code&gt;位置开始的&lt;code&gt;range.length&lt;/code&gt;个文字将要被&lt;code&gt;text&lt;/code&gt;替换时调用，返回YES则通过该次替换，返回&lt;code&gt;NO&lt;/code&gt;则中止该次替换；&lt;br&gt;按照官方文档描述，正常输入（插入）或者删除，都可以认为是一种替换：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正常输入的话，相当于用text替换最后一个空字符串(range.location在文本框最后,range.length为0，text就是输入的文字)；&lt;/li&gt;
&lt;li&gt;删除的话，相当于用text这个空字符串去替换指定range的文本；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;没有考虑到粘贴的情况，当用户输入到maxLength时，选中文本框中的几个字符，然后用一个字符替换，预期总字数少了，是可以输入的，没有超过maxLength，但是按照上面的实现，则返回了NO，中止了该次修改；&lt;/p&gt;
&lt;h1 id=&quot;修改版-第二版&quot;&gt;&lt;a href=&quot;#修改版-第二版&quot; class=&quot;headerlink&quot; title=&quot;修改版-第二版&quot;&gt;&lt;/a&gt;修改版-第二版&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // delete一个或者选中的多个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (0 == text.length &amp;amp;&amp;amp; range.length &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 将要生成的文本长度 = 目前文本框文字长度 + 将要输入的文字长度 - 选中被替换的文字长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (textView.text.length + text.length - range.length &amp;gt; self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;计算将要生成的文本长度时，减去了选中的被替换的文字长度，解决了上面的粘贴问题；&lt;/p&gt;
&lt;h2 id=&quot;问题-1&quot;&gt;&lt;a href=&quot;#问题-1&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;使用时一直用第三方输入法，没有问题，但是切换到系统自带的拼音输入法后，发现当用户输入文字后，再点击键盘上的“联想词”/“推荐词”继续输入时，不会调用到&lt;code&gt;textView:shouldChangeTextInRange:replacementText:&lt;/code&gt;方法，导致可以一直点击“联想词”/“推荐词”输入，超过maxLength的限制；&lt;/p&gt;
&lt;h1 id=&quot;修改版-第三版&quot;&gt;&lt;a href=&quot;#修改版-第三版&quot; class=&quot;headerlink&quot; title=&quot;修改版-第三版&quot;&gt;&lt;/a&gt;修改版-第三版&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // delete一个或者选中的多个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (0 == text.length &amp;amp;&amp;amp; range.length &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 将要生成的文本长度 = 目前文本框文字长度 + 将要输入的文字长度 - 选中被替换的文字长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (textView.text.length + text.length - range.length &amp;gt; self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)textViewDidChange:(UITextView *)textView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (self.maxLength &amp;gt; 0 &amp;amp;&amp;amp; textView.text.length &amp;gt; self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        textView.text = [textView.text substringToIndex:self.maxLength];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;遇到上面第二版的问题后，增加&lt;code&gt;textViewDidChange:&lt;/code&gt;方法：当UITextView中文字发生变化后调用，由于用户是通过点击“联想词”/“推荐词”绕过上面的maxLength限制，所以超过的文字长度基本都是1-2，因此可以直接使用字符串的&lt;code&gt;substringToIndex:&lt;/code&gt;方法截取字符串，且不会占用较多内存；&lt;br&gt;这里说下为啥不直接用&lt;code&gt;textViewDidChange:&lt;/code&gt;来解决问题，原因是如果用户复制了一段超大文本再粘贴到文本框中后，截取字符串时可能会崩溃，因此先用&lt;code&gt;textView:shouldChangeTextInRange:replacementText:&lt;/code&gt;方法判断要输入的文字长度，过长的话则直接返回NO，中止输入；&lt;/p&gt;
&lt;h2 id=&quot;问题-2&quot;&gt;&lt;a href=&quot;#问题-2&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;但是还有些瑕疵，例如当用户只剩下1个字可以输入时，使用系统自带的拼音输入法输入时发现拼音也只能输入1个字母，无法打出想要的字；&lt;br&gt;中文拼音输入属于&lt;code&gt;multistage text input&lt;/code&gt;，即多阶段文本输入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当用系统自带拼音输入法输入，在文本框中还是拼音状态时是Marked阶段；&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nil != textView.markedTextRange) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Marked阶段&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当选择中文后则是Committed阶段；&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nil == textView.markedTextRange) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Committed阶段&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;最终版&quot;&gt;&lt;a href=&quot;#最终版&quot; class=&quot;headerlink&quot; title=&quot;最终版&quot;&gt;&lt;/a&gt;最终版&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 如果使用原生拼音输入法, 在输入拼音阶段(即Marked阶段)忽略校验&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nil != textView.markedTextRange) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // delete一个或者选中的多个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (0 == text.length &amp;amp;&amp;amp; range.length &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 将要生成的文本长度 = 目前文本框文字长度 + 将要输入的文字长度 - 选中被替换的文字长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((textView.text.length + text.length - range.length) &amp;gt; self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)textViewDidChange:(UITextView *)textView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 非拼音状态阶段(即非Marked阶段) 且 变更后文本框长度超过上限 则截取前maxLength个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nil == textView.markedTextRange &amp;amp;&amp;amp; self.maxLength &amp;gt; 0 &amp;amp;&amp;amp; textView.text.length &amp;gt; self.maxLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        textView.text = [textView.text substringToIndex:self.maxLength];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一个简单的小需求：文本框最多可以输入N个字，超过后不可输入，实际在过程中遇到了一些小问题，这里记录一下，想直接看结论的可以直接点目录的“最终版”；&lt;/p&gt;
    
    </summary>
    
      <category term="Dev" scheme="http://zhoh.github.io/categories/Dev/"/>
    
    
      <category term="Mac" scheme="http://zhoh.github.io/tags/Mac/"/>
    
      <category term="iOS" scheme="http://zhoh.github.io/tags/iOS/"/>
    
      <category term="UI" scheme="http://zhoh.github.io/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>多GIT账户的使用</title>
    <link href="http://zhoh.github.io/2016/06/28/git-multi-ssh/"/>
    <id>http://zhoh.github.io/2016/06/28/git-multi-ssh/</id>
    <published>2016-06-28T06:00:18.000Z</published>
    <updated>2016-06-28T11:33:46.000Z</updated>
    
    <content type="html">&lt;p&gt;有时候我们需要在同一台机器上同时使用多个GIT账号，为了避免冲突，我们需要配置~/.ssh/config文件，其中，多Git账户分两种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同域名下的不同账户，比如一个github.com域名下的账户，另一个是gitlab.com域名下的账户；&lt;/li&gt;
&lt;li&gt;相同域名下的不同账户，如github.com域名下有两个账户；&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;不同域名不同账号&quot;&gt;&lt;a href=&quot;#不同域名不同账号&quot; class=&quot;headerlink&quot; title=&quot;不同域名不同账号&quot;&gt;&lt;/a&gt;不同域名不同账号&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;假如在gitlab.com上有个user1（email1）账号，在github.com上有个user2（email2）账号；&lt;/p&gt;
&lt;h2 id=&quot;分别生成密钥&quot;&gt;&lt;a href=&quot;#分别生成密钥&quot; class=&quot;headerlink&quot; title=&quot;分别生成密钥&quot;&gt;&lt;/a&gt;分别生成密钥&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;ssh-keygen -t -rsa -C &amp;#39;email1&amp;#39;&lt;/code&gt;生成SSH Key：id_rsa_gitlab；&lt;br&gt;使用&lt;code&gt;ssh-keygen -t -rsa -C &amp;#39;email2&amp;#39;&lt;/code&gt;生成SSH Key：id_rsa_github；&lt;br&gt;为两个账号分别生成两个不重名且可辨识的密钥文件，并将生成的两个SSH Public Key分别添加到Gitlab和Github。&lt;br&gt;由于默认SSH只会读取id_rsa，为了让SSH识别新的密钥，还需要加到SSH Agent里面&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-add ～/.ssh/id_rsa_gitlab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh-add ～/.ssh/id_rsa_github&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该命令如果报错：&lt;code&gt;Could not open a connection to your authentication agent.&lt;/code&gt; 无法连接到ssh agent，可执行&lt;code&gt;ssh-agent bash&lt;/code&gt;命令后再执行ssh-add命令；&lt;/p&gt;
&lt;h2 id=&quot;修改config文件&quot;&gt;&lt;a href=&quot;#修改config文件&quot; class=&quot;headerlink&quot; title=&quot;修改config文件&quot;&gt;&lt;/a&gt;修改config文件&lt;/h2&gt;&lt;p&gt;完成以上步骤后在~/.ssh目录下找到config文件，如果没有就创建&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;touch config &lt;span class=&quot;comment&quot;&gt;# 创建config文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后修改如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# GitLab&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host gitlab.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HostName gitlab.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User email1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IdentityFile ~/.ssh/id_rsa_gitlab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# GitHub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HostName github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User email2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IdentityFile ~/.ssh/id_rsa_github&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;清空~/.ssh目录下known_hosts的内容（如果有），至此完成；&lt;/p&gt;
&lt;h2 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh -T git@gitlab.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Welcome to GitLab, user1!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hi user2! You&lt;span class=&quot;string&quot;&gt;&#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以增加&lt;code&gt;-vv&lt;/code&gt;参数打开debug模式，查看整个debug过程；&lt;/p&gt;
&lt;h1 id=&quot;相同域名不同账号&quot;&gt;&lt;a href=&quot;#相同域名不同账号&quot; class=&quot;headerlink&quot; title=&quot;相同域名不同账号&quot;&gt;&lt;/a&gt;相同域名不同账号&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;多用户模式下，比如在github.com上有两个账号，分别是user1（email1）和user2（email2）&lt;/p&gt;
&lt;h2 id=&quot;分别生成密钥-1&quot;&gt;&lt;a href=&quot;#分别生成密钥-1&quot; class=&quot;headerlink&quot; title=&quot;分别生成密钥&quot;&gt;&lt;/a&gt;分别生成密钥&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;ssh-keygen -t -rsa -C &amp;#39;email1&amp;#39;&lt;/code&gt;生成SSH Key：id_rsa_first；&lt;br&gt;使用&lt;code&gt;ssh-keygen -t -rsa -C &amp;#39;email2&amp;#39;&lt;/code&gt;生成SSH Key：id_rsa_second；&lt;br&gt;为两个账号分别生成两个不重名且可辨识的密钥文件，并将生成的两个SSH Public Key分别添加到各自Github后台；&lt;br&gt;为了让SSH识别新的密钥，还需要加到SSH Agent里面&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-add ～/.ssh/id_rsa_gitlab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh-add ～/.ssh/id_rsa_github&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该命令如果报错：&lt;code&gt;Could not open a connection to your authentication agent.&lt;/code&gt; 无法连接到ssh agent，可执行&lt;code&gt;ssh-agent bash&lt;/code&gt;命令后再执行ssh-add命令；&lt;/p&gt;
&lt;h2 id=&quot;取消全局用户名&quot;&gt;&lt;a href=&quot;#取消全局用户名&quot; class=&quot;headerlink&quot; title=&quot;取消全局用户名&quot;&gt;&lt;/a&gt;取消全局用户名&lt;/h2&gt;&lt;p&gt;由于要使用不同的用户名，所以需要Git不设置全局配置，诸如：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果已经设置，可以用下面的命令取消：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global --unset user.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global --unset user.email&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;备注：针对每个项目，可以单独设置该项目的用户名和邮箱，方法如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; yourProjectPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git config user.name &lt;span class=&quot;string&quot;&gt;&quot;your_name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git config user.email &lt;span class=&quot;string&quot;&gt;&quot;your_email&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其实就是进入到Git项目根目录下执行git config设置记录；&lt;/p&gt;
&lt;h2 id=&quot;修改config文件-1&quot;&gt;&lt;a href=&quot;#修改config文件-1&quot; class=&quot;headerlink&quot; title=&quot;修改config文件&quot;&gt;&lt;/a&gt;修改config文件&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# user1(email1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HostName github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User email1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IdentityFile ~/.ssh/id_rsa_first&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# user2(email2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host github2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HostName github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User email2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IdentityFile ~/.ssh/id_rsa_second&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置中的Host就是每个SSH连接的单独代号，IdentityFile会告诉SSH连接去读取哪个私钥；&lt;/p&gt;
&lt;h2 id=&quot;测试-1&quot;&gt;&lt;a href=&quot;#测试-1&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h2&gt;&lt;p&gt;连接测试：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hi user1! You&lt;span class=&quot;string&quot;&gt;&#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ssh -T github2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hi user2! You&#39;&lt;/span&gt;ve successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以增加&lt;code&gt;-vv&lt;/code&gt;参数打开debug模式，查看整个debug过程；&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在同一机器不同目录下使用不同账号clone同一个repo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; user1Path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; git@github.com:xxxx/xxxx.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; user2Path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; git@github2:xxxx/xxxx.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有时候我们需要在同一台机器上同时使用多个GIT账号，为了避免冲突，我们需要配置~/.ssh/config文件，其中，多Git账户分两种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同域名下的不同账户，比如一个github.com域名下的账户，另一个是gitlab.com域名下的账户；&lt;/li&gt;
&lt;li&gt;相同域名下的不同账户，如github.com域名下有两个账户；&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://zhoh.github.io/categories/Tech/"/>
    
    
      <category term="GIT" scheme="http://zhoh.github.io/tags/GIT/"/>
    
      <category term="SSH" scheme="http://zhoh.github.io/tags/SSH/"/>
    
      <category term="Mac" scheme="http://zhoh.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac配置SSH连接GitHub</title>
    <link href="http://zhoh.github.io/2016/05/04/git-ssh/"/>
    <id>http://zhoh.github.io/2016/05/04/git-ssh/</id>
    <published>2016-05-04T02:39:18.000Z</published>
    <updated>2016-06-28T08:07:01.000Z</updated>
    
    <content type="html">&lt;p&gt;最近接触的项目都在用分布式的Git管理，能看到这里说明你已经了解为什么要使用Git:-)&lt;br&gt;使用Git有两种方式： &lt;code&gt;HTTPS&lt;/code&gt; 和 &lt;code&gt;SSH&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTPS的方式，对初学者来说比较简单，直接使用HTTPS的URL把项目Clone到本地，不需要配置密钥，只是每次fetch或push代码都需要输入密码，比较麻烦；&lt;/li&gt;
&lt;li&gt;SSH的方式，本地托管SSH的账户密钥，即SSH key, 通过它在本机和GitHub之间建立一个安全连接，fetch或push的时候不需要输入密码；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以GitHub为例，打开GitHub上的项目Clone方式下拉框，可以看到官方推荐的是使用HTTPS的方式，不过由于不想每次都输入密码且工作原因（Pod仓库用Git管理且要求使用SSH方式下载)，所以下面记录下如何使用SSH的方式去连接GitHub。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;检查Git&quot;&gt;&lt;a href=&quot;#检查Git&quot; class=&quot;headerlink&quot; title=&quot;检查Git&quot;&gt;&lt;/a&gt;检查Git&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;首先要确认机器上装了Git，可以打开&lt;code&gt;终端&lt;/code&gt;，试着输入&lt;code&gt;git&lt;/code&gt;来确认，如果没有安装可以通过&lt;code&gt;&lt;a href=&quot;http://brew.sh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Homebrew&lt;/a&gt;&lt;/code&gt;安装Git，或者直接从&lt;code&gt;&lt;a href=&quot;https://itunes.apple.com/cn/app/xcode/id497799835?mt=12&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AppStore&lt;/a&gt;&lt;/code&gt;安装&lt;code&gt;Xcode&lt;/code&gt;，打开后按照提示安装&lt;code&gt;Command Line Tools&lt;/code&gt;， Git就自动装上了；&lt;/p&gt;
&lt;h1 id=&quot;创建SSH-Key&quot;&gt;&lt;a href=&quot;#创建SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;创建SSH Key&quot;&gt;&lt;/a&gt;创建SSH Key&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;在终端中创建SSH Key&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;youremail@example.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;把上面的邮件地址换成自己的邮件地址，一路回车使用默认值（默认的文件名且不设置密码）即可，然后进入用户主目录下的&lt;code&gt;.ssh&lt;/code&gt;目录:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ open ~/.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.pub&lt;/code&gt;两个文件，这两个就是SSH Key的密钥对，其中&lt;code&gt;id_rsa&lt;/code&gt;中的内容是私钥，个人持有不要泄露, &lt;code&gt;id_rsa.pub&lt;/code&gt;中的内容是公钥，用来验证私钥的合法性，使用任一文本编辑器打开id_rsa.pub，并复制其内容备用，或者直接使用下面的命令复制：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ pbcopy &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此，本地的设置已完成，接下来需要去GitHub继续配置；&lt;/p&gt;
&lt;h1 id=&quot;GitHub设置SSK-Key&quot;&gt;&lt;a href=&quot;#GitHub设置SSK-Key&quot; class=&quot;headerlink&quot; title=&quot;GitHub设置SSK Key&quot;&gt;&lt;/a&gt;GitHub设置SSK Key&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;登录GitHub，依次打开Settings—&amp;gt;”SSH and GPG keys”—&amp;gt;”New SSH key”，title自己起个名字，key中填写上一步的公钥文件内容，最后点击“Add SSH key”即可；&lt;/p&gt;
&lt;h1 id=&quot;测试SSH&quot;&gt;&lt;a href=&quot;#测试SSH&quot; class=&quot;headerlink&quot; title=&quot;测试SSH&quot;&gt;&lt;/a&gt;测试SSH&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;在&lt;code&gt;终端&lt;/code&gt;中输入:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后可能会看到如下warning&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;The authenticity of host &lt;span class=&quot;string&quot;&gt;&#39;github.com (192.30.252.1)&#39;&lt;/span&gt; can&lt;span class=&quot;string&quot;&gt;&#39;t be established.
RSA key fingerprint is 17:23:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;The authenticity of host &lt;span class=&quot;string&quot;&gt;&#39;github.com (192.30.252.1)&#39;&lt;/span&gt; can&lt;span class=&quot;string&quot;&gt;&#39;t be established.
RSA key fingerprint is nThbg6kXUpJWGl7E1IYOCspRomKxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;输入 &lt;code&gt;yes&lt;/code&gt; 回车确认即可，然后就能看到认证成功的提示:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Hi userName! You&lt;span class=&quot;string&quot;&gt;&#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近接触的项目都在用分布式的Git管理，能看到这里说明你已经了解为什么要使用Git:-)&lt;br&gt;使用Git有两种方式： &lt;code&gt;HTTPS&lt;/code&gt; 和 &lt;code&gt;SSH&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTPS的方式，对初学者来说比较简单，直接使用HTTPS的URL把项目Clone到本地，不需要配置密钥，只是每次fetch或push代码都需要输入密码，比较麻烦；&lt;/li&gt;
&lt;li&gt;SSH的方式，本地托管SSH的账户密钥，即SSH key, 通过它在本机和GitHub之间建立一个安全连接，fetch或push的时候不需要输入密码；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以GitHub为例，打开GitHub上的项目Clone方式下拉框，可以看到官方推荐的是使用HTTPS的方式，不过由于不想每次都输入密码且工作原因（Pod仓库用Git管理且要求使用SSH方式下载)，所以下面记录下如何使用SSH的方式去连接GitHub。&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://zhoh.github.io/categories/Tech/"/>
    
    
      <category term="GIT" scheme="http://zhoh.github.io/tags/GIT/"/>
    
      <category term="SSH" scheme="http://zhoh.github.io/tags/SSH/"/>
    
      <category term="Mac" scheme="http://zhoh.github.io/tags/Mac/"/>
    
  </entry>
  
</feed>
